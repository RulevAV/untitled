// Замыкание
// Замыкание – это понятие связано с областями видимости функций.
// Переменная если объявлена внутри функции, то жить она будет только внутри этой функции.
// Каждый раз, когда вызывается функция, переменная создается заново и после выполнения garbage collector (Сборка мусора) ее очищает.
// Если переменная в функции не объявлена, то она берется из лексического окружения, где она описана. Не вызова, а объявлена.
//Пример1
var a = 5;
function f() {//Переменная “а” глобальная, а функция f() замкнута на нее.
    console.log(a);
}
//Пример2 использования замыкания.
function Counter() {
    var counter = 0;
    return function () {
        counter++;
        return counter;
    }
}
var counterF1 = Counter();
var counterF2 = Counter();
console.log(counterF1());//1
console.log(counterF2());//1
console.log(counterF1());//2
console.log(counterF2());//2
console.log(counterF1());//3

